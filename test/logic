Logic and exit codes
====================

Here are some test cases for logic, pipes and grep.

~~~~ check-output/logic.sh
true && echo true works
true || echo true fails

false && echo false fails
false || echo false works

echo hello | grep goodbye && echo pipe bad grep fails
echo hello | grep goodbye || echo pipe bad grep works

echo hello | grep hell && echo pipe good grep works
echo hello | grep hell || echo pipe good grep fails

echo hello | grep foo | true && echo complicated pipe works
echo hello | grep foo | true || echo complicated pipe fails
~~~~

~~~~ known-output/logic.sh
true works
false works
pipe bad grep works
hello
pipe good grep works
hello
complicated pipe works
~~~~

Here are some tests of the `$?` environment variable, which currently
fail.

~~~~ check-output/exit-code.sh
false
echo false exit code is $?
~~~~

~~~~ known-output/exit-code.sh
false exit code is 1
~~~~

Pipes with external commands
----------------------------

Here I add a few tests for pipes involving external commands rather
than builtins.  I use shsh as the external command, since it's the
only external program I know is in the `PATH` during testing.  Thus this
test also checks that the exit code of shsh itself is correct.

~~~~ check-output/external-shsh.sh
mkdir tmp
cd tmp
echo true > true.sh
echo false > false.sh
echo grep foo > grepfoo.sh

shsh true.sh && echo true works
shsh true.sh || echo true FAILS

shsh false.sh && echo false FAILS
shsh false.sh || echo false works

echo hello | shsh grepfoo.sh && echo pipe bad grep FAILS
echo hello | shsh grepfoo.sh || echo pipe bad grep works

echo hello | shsh grepfoo.sh | true && echo complicated pipe works
echo hello | shsh grepfoo.sh | true || echo complicated pipe FAILS

echo hello | shsh grepfoo.sh | shsh true.sh && echo other pipe works
echo hello | shsh grepfoo.sh | shsh true.sh || echo other pipe FAILS

echo hello | shsh grepfoo.sh | shsh false.sh && echo false pipe FAILS
echo hello | shsh grepfoo.sh | shsh false.sh || echo false pipe works
~~~~

Finally, we have a test that the output appears in the proper order.

~~~~ known-output/external-shsh.sh
true works
false works
pipe bad grep works
complicated pipe works
other pipe works
false pipe works
~~~~

~~~~ check-output/order-of-output.sh
mkdir tmp
mkdir tmp/order
cd tmp/order
echo grep foo > grepfoo.sh

echo good food | shsh grepfoo.sh && echo pipe good grep works
echo good food | shsh grepfoo.sh || echo pipe good grep FAILS
~~~~

~~~~ known-output/order-of-output.sh
good food
pipe good grep works
good food
~~~~


~~~~ check-output/pipe-to-grep.sh
mkdir tmp
mkdir tmp/pipe-to-grep
cd tmp/pipe-to-grep
echo cat foo > catfoo.sh

shsh catfoo.sh | grep foo && echo catfoo to grep works
shsh catfoo.sh | grep foo || echo catfoo to grep FAILS

shsh catfoo.sh | grep bar && echo catfoo to grep bar FAILS
shsh catfoo.sh | grep bar || echo catfoo to grep bar works
~~~~

~~~~ known-output/pipe-to-grep.sh
foo
catfoo to grep works
catfoo to grep bar works
~~~~
